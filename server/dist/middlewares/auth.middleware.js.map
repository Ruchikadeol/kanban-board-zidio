{"version":3,"sources":["../../src/middlewares/auth.middleware.ts"],"sourcesContent":["import { NextFunction, Response } from 'express';\nimport { JwtPayload, verify } from 'jsonwebtoken';\nimport { SECRET_KEY } from '@config';\nimport { HttpException } from '@exceptions/HttpException';\nimport { DataStoredInToken, RequestWithUserId } from '@interfaces/auth.interface';\n\nconst authMiddleware = async (req: RequestWithUserId, res: Response, next: NextFunction) => {\n  try {\n    const Authorization = req.cookies['Authorization'] || (req.header('Authorization') ? req.header('Authorization').split('Bearer ')[1] : null);\n    if (Authorization) {\n      const secretKey: string = SECRET_KEY;\n      const verificationResponse: JwtPayload & DataStoredInToken = (await verify(Authorization, secretKey)) as DataStoredInToken;\n      if (verificationResponse.exp < Math.floor(Date.now() / 1000)) next(new HttpException(401, 'Authentication token expired'));\n      const userId = verificationResponse.userId;\n      req.userId = userId;\n      next();\n    } else {\n      next(new HttpException(404, 'Authentication token missing'));\n    }\n  } catch (error) {\n    next(new HttpException(401, 'Wrong authentication token'));\n  }\n};\n\nexport default authMiddleware;\n"],"names":["authMiddleware","req","res","next","Authorization","cookies","header","split","secretKey","SECRET_KEY","verificationResponse","verify","exp","Math","floor","Date","now","HttpException","userId","error"],"mappings":";;;;+BAwBA;;;eAAA;;;8BAvBmC;wBACR;+BACG;AAG9B,MAAMA,iBAAiB,OAAOC,KAAwBC,KAAeC;IACnE,IAAI;QACF,MAAMC,gBAAgBH,IAAII,OAAO,CAAC,gBAAgB,IAAKJ,CAAAA,IAAIK,MAAM,CAAC,mBAAmBL,IAAIK,MAAM,CAAC,iBAAiBC,KAAK,CAAC,UAAU,CAAC,EAAE,GAAG,IAAG;QAC1I,IAAIH,eAAe;YACjB,MAAMI,YAAoBC,kBAAU;YACpC,MAAMC,uBAAwD,MAAMC,IAAAA,oBAAM,EAACP,eAAeI;YAC1F,IAAIE,qBAAqBE,GAAG,GAAGC,KAAKC,KAAK,CAACC,KAAKC,GAAG,KAAK,OAAOb,KAAK,IAAIc,4BAAa,CAAC,KAAK;YAC1F,MAAMC,SAASR,qBAAqBQ,MAAM;YAC1CjB,IAAIiB,MAAM,GAAGA;YACbf;QACF,OAAO;YACLA,KAAK,IAAIc,4BAAa,CAAC,KAAK;QAC9B;IACF,EAAE,OAAOE,OAAO;QACdhB,KAAK,IAAIc,4BAAa,CAAC,KAAK;IAC9B;AACF;MAEA,WAAejB"}