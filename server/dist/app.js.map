{"version":3,"sources":["../src/app.ts"],"sourcesContent":["import { CREDENTIALS, LOG_FORMAT, NODE_ENV, ORIGIN, PORT } from '@config';\nimport { db } from '@databases';\nimport { Routes } from '@interfaces/routes.interface';\nimport errorMiddleware from '@middlewares/error.middleware';\nimport compression from 'compression';\nimport cookieParser from 'cookie-parser';\nimport cors from 'cors';\nimport express from 'express';\nimport helmet from 'helmet';\nimport hpp from 'hpp';\nimport morgan from 'morgan';\nimport { setupAssociations } from './models/associations';\n\nclass App {\n  public app: express.Application;\n  public env: string;\n  public port: string | number;\n\n  constructor(routes: Routes[]) {\n    this.app = express();\n    this.env = NODE_ENV || 'development';\n    this.port = PORT || 3000;\n\n    this.connectToDatabase();\n    this.initializeMiddlewares();\n    this.initializeRoutes(routes);\n    this.initializeErrorHandling();\n  }\n\n  public listen() {\n    this.app.listen(this.port, () => {\n      console.log(`=================================`);\n      console.log(`======= ENV: ${this.env} =======`);\n      console.log(`ðŸš€ App listening on the port ${this.port}`);\n      console.log(`=================================`);\n    });\n  }\n\n  public getServer() {\n    return this.app;\n  }\n\n  private async connectToDatabase() {\n    setupAssociations();\n    try {\n      await db.authenticate();\n      console.log('Database connected');\n    } catch (error) {\n      console.log('Unable to connect to the database:', error);\n    }\n  }\n  private initializeMiddlewares() {\n    this.app.use(morgan(LOG_FORMAT));\n    this.app.use(cors({ origin: ORIGIN, credentials: CREDENTIALS }));\n    this.app.use(hpp());\n    this.app.use(helmet());\n    this.app.use(compression());\n    this.app.use(express.json());\n    this.app.use(express.urlencoded({ extended: true }));\n    this.app.use(cookieParser());\n  }\n\n  private initializeRoutes(routes: Routes[]) {\n    routes.forEach(route => {\n      this.app.use('/api/', route.router);\n    });\n  }\n\n  private initializeErrorHandling() {\n    this.app.use(errorMiddleware);\n  }\n}\n\nexport default App;\n"],"names":["App","listen","app","port","console","log","env","getServer","connectToDatabase","setupAssociations","db","authenticate","error","initializeMiddlewares","use","morgan","LOG_FORMAT","cors","origin","ORIGIN","credentials","CREDENTIALS","hpp","helmet","compression","express","json","urlencoded","extended","cookieParser","initializeRoutes","routes","forEach","route","router","initializeErrorHandling","errorMiddleware","NODE_ENV","PORT"],"mappings":";;;;+BAyEA;;;eAAA;;;wBAzEgE;2BAC7C;wEAES;oEACJ;qEACC;6DACR;gEACG;+DACD;4DACH;+DACG;8BACe;;;;;;;;;;;;;;;;;;;AAElC,IAAA,AAAMA,MAAN,MAAMA;IAgBGC,SAAS;QACd,IAAI,CAACC,GAAG,CAACD,MAAM,CAAC,IAAI,CAACE,IAAI,EAAE;YACzBC,QAAQC,GAAG,CAAC,CAAC,iCAAiC,CAAC;YAC/CD,QAAQC,GAAG,CAAC,CAAC,aAAa,EAAE,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC;YAC9CF,QAAQC,GAAG,CAAC,CAAC,6BAA6B,EAAE,IAAI,CAACF,IAAI,EAAE;YACvDC,QAAQC,GAAG,CAAC,CAAC,iCAAiC,CAAC;QACjD;IACF;IAEOE,YAAY;QACjB,OAAO,IAAI,CAACL,GAAG;IACjB;IAEA,MAAcM,oBAAoB;QAChCC,IAAAA,+BAAiB;QACjB,IAAI;YACF,MAAMC,aAAE,CAACC,YAAY;YACrBP,QAAQC,GAAG,CAAC;QACd,EAAE,OAAOO,OAAO;YACdR,QAAQC,GAAG,CAAC,sCAAsCO;QACpD;IACF;IACQC,wBAAwB;QAC9B,IAAI,CAACX,GAAG,CAACY,GAAG,CAACC,IAAAA,eAAM,EAACC,kBAAU;QAC9B,IAAI,CAACd,GAAG,CAACY,GAAG,CAACG,IAAAA,aAAI,EAAC;YAAEC,QAAQC,cAAM;YAAEC,aAAaC,mBAAW;QAAC;QAC7D,IAAI,CAACnB,GAAG,CAACY,GAAG,CAACQ,IAAAA,YAAG;QAChB,IAAI,CAACpB,GAAG,CAACY,GAAG,CAACS,IAAAA,eAAM;QACnB,IAAI,CAACrB,GAAG,CAACY,GAAG,CAACU,IAAAA,oBAAW;QACxB,IAAI,CAACtB,GAAG,CAACY,GAAG,CAACW,gBAAO,CAACC,IAAI;QACzB,IAAI,CAACxB,GAAG,CAACY,GAAG,CAACW,gBAAO,CAACE,UAAU,CAAC;YAAEC,UAAU;QAAK;QACjD,IAAI,CAAC1B,GAAG,CAACY,GAAG,CAACe,IAAAA,qBAAY;IAC3B;IAEQC,iBAAiBC,MAAgB,EAAE;QACzCA,OAAOC,OAAO,CAACC,CAAAA;YACb,IAAI,CAAC/B,GAAG,CAACY,GAAG,CAAC,SAASmB,MAAMC,MAAM;QACpC;IACF;IAEQC,0BAA0B;QAChC,IAAI,CAACjC,GAAG,CAACY,GAAG,CAACsB,wBAAe;IAC9B;IApDA,YAAYL,MAAgB,CAAE;QAJ9B,uBAAO7B,OAAP,KAAA;QACA,uBAAOI,OAAP,KAAA;QACA,uBAAOH,QAAP,KAAA;QAGE,IAAI,CAACD,GAAG,GAAGuB,IAAAA,gBAAO;QAClB,IAAI,CAACnB,GAAG,GAAG+B,gBAAQ,IAAI;QACvB,IAAI,CAAClC,IAAI,GAAGmC,YAAI,IAAI;QAEpB,IAAI,CAAC9B,iBAAiB;QACtB,IAAI,CAACK,qBAAqB;QAC1B,IAAI,CAACiB,gBAAgB,CAACC;QACtB,IAAI,CAACI,uBAAuB;IAC9B;AA4CF;MAEA,WAAenC"}