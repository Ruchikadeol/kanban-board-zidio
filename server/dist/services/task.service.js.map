{"version":3,"sources":["../../src/services/task.service.ts"],"sourcesContent":["import { HttpException } from '@/exceptions/HttpException';\nimport TaskModel from '@/models/tasks.model';\nimport { Op } from 'sequelize';\n\nexport class TaskService {\n  public tasks = TaskModel;\n\n  public async findAllTasksOfUser(userId: string) {\n    const findTasks = await this.tasks.findAll({ where: { userId: userId }, order: [['updatedAt', 'DESC']] });\n    return findTasks;\n  }\n\n  public async createTask(userId: string, taskData: any) {\n    const createTaskData = await this.tasks.create({ ...taskData, userId });\n    return createTaskData;\n  }\n\n  public async updateTask(taskId: string, userId: string, taskData: any) {\n    const findTask = await this.tasks.findOne({ where: { id: taskId, userId: userId } });\n    if (!findTask) throw new HttpException(404, `This task ${taskId} was not found`);\n\n    const updateTaskData = await this.tasks.update({ ...taskData }, { where: { id: taskId } });\n    return updateTaskData;\n  }\n\n  public async updateTaskPosition(taskId: string, taskPositionData: any) {\n    const { sourceColumnId, destinationColumnId } = taskPositionData;\n\n    const findTask = await this.tasks.findOne({ where: { columnId: sourceColumnId, id: taskId } });\n    if (!findTask) throw new HttpException(404, `This task ${taskId} was not found`);\n\n    const updateTaskData = await this.tasks.update({ columnId: destinationColumnId }, { where: { id: taskId, columnId: sourceColumnId } });\n\n    return updateTaskData;\n  }\n\n  public async deleteTask(taskId: string, userId: string) {\n    const findTask = await this.tasks.findOne({ where: { id: taskId, userId: userId } });\n    if (!findTask) throw new HttpException(404, `This task ${taskId} was not found`);\n    const deleteTaskData = await this.tasks.destroy({ where: { id: taskId } });\n    return deleteTaskData;\n  }\n}\n"],"names":["TaskService","findAllTasksOfUser","userId","findTasks","tasks","findAll","where","order","createTask","taskData","createTaskData","create","updateTask","taskId","findTask","findOne","id","HttpException","updateTaskData","update","updateTaskPosition","taskPositionData","sourceColumnId","destinationColumnId","columnId","deleteTask","deleteTaskData","destroy","TaskModel"],"mappings":";;;;+BAIaA;;;eAAAA;;;+BAJiB;mEACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGf,IAAA,AAAMA,cAAN,MAAMA;IAGX,MAAaC,mBAAmBC,MAAc,EAAE;QAC9C,MAAMC,YAAY,MAAM,IAAI,CAACC,KAAK,CAACC,OAAO,CAAC;YAAEC,OAAO;gBAAEJ,QAAQA;YAAO;YAAGK,OAAO;gBAAC;oBAAC;oBAAa;iBAAO;aAAC;QAAC;QACvG,OAAOJ;IACT;IAEA,MAAaK,WAAWN,MAAc,EAAEO,QAAa,EAAE;QACrD,MAAMC,iBAAiB,MAAM,IAAI,CAACN,KAAK,CAACO,MAAM,CAAC,wCAAKF;YAAUP;;QAC9D,OAAOQ;IACT;IAEA,MAAaE,WAAWC,MAAc,EAAEX,MAAc,EAAEO,QAAa,EAAE;QACrE,MAAMK,WAAW,MAAM,IAAI,CAACV,KAAK,CAACW,OAAO,CAAC;YAAET,OAAO;gBAAEU,IAAIH;gBAAQX,QAAQA;YAAO;QAAE;QAClF,IAAI,CAACY,UAAU,MAAM,IAAIG,4BAAa,CAAC,KAAK,CAAC,UAAU,EAAEJ,OAAO,cAAc,CAAC;QAE/E,MAAMK,iBAAiB,MAAM,IAAI,CAACd,KAAK,CAACe,MAAM,CAAC,mBAAKV,WAAY;YAAEH,OAAO;gBAAEU,IAAIH;YAAO;QAAE;QACxF,OAAOK;IACT;IAEA,MAAaE,mBAAmBP,MAAc,EAAEQ,gBAAqB,EAAE;QACrE,MAAM,EAAEC,cAAc,EAAEC,mBAAmB,EAAE,GAAGF;QAEhD,MAAMP,WAAW,MAAM,IAAI,CAACV,KAAK,CAACW,OAAO,CAAC;YAAET,OAAO;gBAAEkB,UAAUF;gBAAgBN,IAAIH;YAAO;QAAE;QAC5F,IAAI,CAACC,UAAU,MAAM,IAAIG,4BAAa,CAAC,KAAK,CAAC,UAAU,EAAEJ,OAAO,cAAc,CAAC;QAE/E,MAAMK,iBAAiB,MAAM,IAAI,CAACd,KAAK,CAACe,MAAM,CAAC;YAAEK,UAAUD;QAAoB,GAAG;YAAEjB,OAAO;gBAAEU,IAAIH;gBAAQW,UAAUF;YAAe;QAAE;QAEpI,OAAOJ;IACT;IAEA,MAAaO,WAAWZ,MAAc,EAAEX,MAAc,EAAE;QACtD,MAAMY,WAAW,MAAM,IAAI,CAACV,KAAK,CAACW,OAAO,CAAC;YAAET,OAAO;gBAAEU,IAAIH;gBAAQX,QAAQA;YAAO;QAAE;QAClF,IAAI,CAACY,UAAU,MAAM,IAAIG,4BAAa,CAAC,KAAK,CAAC,UAAU,EAAEJ,OAAO,cAAc,CAAC;QAC/E,MAAMa,iBAAiB,MAAM,IAAI,CAACtB,KAAK,CAACuB,OAAO,CAAC;YAAErB,OAAO;gBAAEU,IAAIH;YAAO;QAAE;QACxE,OAAOa;IACT;;QApCA,uBAAOtB,SAAQwB,mBAAS;;AAqC1B"}